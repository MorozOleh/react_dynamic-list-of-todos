{"version":3,"sources":["components/Todo/Todo.jsx","API/api.js","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["Todo","todo","selectedUser","className","classNames","completed","type","readOnly","checked","title","onClick","userId","request","url","a","fetch","response","ok","Error","status","json","getTodos","data","getUser","TodoList","state","todos","selectValue","filterByTitle","event","value","target","filter","includes","setState","onChange","e","name","selectCategory","property","this","props","placeholder","map","key","id","Component","CurrentUser","user","loadAndSetUser","prevState","onClear","email","phone","App","selectedUserId","selectUser","clearUserId","React","ReactDOM","render","document","getElementById"],"mappings":"kZAIO,SAASA,EAAT,GAAuC,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,aAC3B,OACE,wBAAIC,UAAWC,IACb,iBACA,CAAE,4BAA6BH,EAAKI,WACpC,CAAE,2BAA4BJ,EAAKI,aAGnC,+BACE,2BACEC,KAAK,WACLC,UAAQ,EACRC,SAAUP,EAAKI,YAEjB,2BAAIJ,EAAKQ,QAGX,4BACEN,UAAU,iEAKVG,KAAK,SACLI,QAAS,kBAAMR,EAAaD,EAAKU,UAPnC,YAUGV,EAAKU,SC/Bd,IAEMC,EAAO,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sEACSC,MAAM,GAAD,OAHZ,mCAGY,OAAgBF,IAD9B,WACRG,EADQ,QAGAC,GAHA,sBAIN,IAAIC,MAAJ,UAAaF,EAASG,SAJhB,gCAOPH,EAASI,QAPF,2CAAH,sDAUAC,EAAQ,uCAAG,4BAAAP,EAAA,sEACCF,EAAQ,SADT,cAChBI,EADgB,yBAGfA,EAASM,MAHM,2CAAH,qDAMRC,EAAO,uCAAG,WAAMZ,GAAN,eAAAG,EAAA,sEACEF,EAAQ,SAAD,OAAUD,IADnB,cACfK,EADe,yBAGdA,EAASM,MAHK,2CAAH,sDCXPE,G,MAAb,4MACEC,MAAQ,CACNC,MAAO,GACPC,YAAa,IAHjB,EAUEC,cAVF,uCAUkB,WAAMC,GAAN,iBAAAf,EAAA,6DACNgB,EAAUD,EAAME,OAAhBD,MADM,SAEIT,IAFJ,OAIdK,GAFIA,EAFU,QAIAM,QAAO,SAAA/B,GAAI,OAAqB,OAAfA,EAAKQ,MAChCR,EAAKQ,MAAMwB,SAASH,GACpB,QAEJ,EAAKI,SAAS,CAAER,UARF,2CAVlB,wDAqBES,SAAW,SAACC,GAAO,IAAD,EACQA,EAAEL,OAAlBD,EADQ,EACRA,MAAOO,EADC,EACDA,KAIf,OAFA,EAAKH,SAAL,eAAiBG,EAAOP,IAEjB,EAAKQ,eAAeR,IA1B/B,EA6BEQ,eA7BF,uCA6BmB,WAAMC,GAAN,eAAAzB,EAAA,sEACKO,IADL,OACTK,EADS,YAGPa,EAHO,OAIR,cAJQ,OAUR,WAVQ,8BAKX,EAAKL,SAAS,CAAER,MAAOA,EAAMM,QAC3B,SAAA/B,GAAI,OAAKA,EAAKI,eANL,mCAWX,EAAK6B,SAAS,CAAER,MAAOA,EAAMM,QAC3B,SAAA/B,GAAI,OAAIA,EAAKI,eAZJ,6BAiBX,EAAK6B,SAAS,CAAER,UAjBL,4CA7BnB,oJAME,sBAAAZ,EAAA,kEACE0B,KADF,SAC+BnB,IAD/B,yBACkBK,MADlB,WACOQ,SADP,gEANF,0EAkDE,WAAU,IACAhC,EAAiBsC,KAAKC,MAAtBvC,aADD,EAEwBsC,KAAKf,MAA5BC,EAFD,EAECA,MAAOC,EAFR,EAEQA,YACPQ,EAA4BK,KAA5BL,SAAUP,EAAkBY,KAAlBZ,cAElB,OACE,yBAAKzB,UAAU,YACb,sCACA,oCACE,2BACEA,UAAU,mBACVG,KAAK,OACLoC,YAAY,kBACZP,SAAUP,IAEZ,yBAAKzB,UAAU,qBACb,4BACEkC,KAAK,cACLP,MAAOH,EACPQ,SAAUA,GAEV,uCACA,0CACA,gDAIN,yBAAKhC,UAAU,4BACb,wBAAIA,UAAU,kBACXuB,EAAMiB,KAAI,SAAA1C,GAAI,OACb,kBAACD,EAAD,CACE4C,IAAK3C,EAAK4C,GACV5C,KAAMA,EACNC,aAAcA,cAnF9B,GAA8B4C,cCFjBC,G,MAAb,4MACEtB,MAAQ,CACNuB,KAAM,MAFV,uDAKE,WACER,KAAKS,mBANT,gCASE,SAAmBC,GACbA,EAAUvC,SAAW6B,KAAKC,MAAM9B,QAClC6B,KAAKS,mBAXX,mEAeE,4BAAAnC,EAAA,sEACqBS,EAAQiB,KAAKC,MAAM9B,QADxC,OACQqC,EADR,OAGER,KAAKN,SAAS,CAAEc,SAHlB,gDAfF,0EAqBE,WAAU,IAAD,EACqBR,KAAKC,MAAzB9B,EADD,EACCA,OAAQwC,EADT,EACSA,QACRH,EAASR,KAAKf,MAAduB,KAER,OAAKA,EAKH,yBAAK7C,UAAU,eACb,wBAAIA,UAAU,sBACZ,wDACsBQ,KAIxB,wBAAIR,UAAU,qBAAqB6C,EAAKX,MACxC,uBAAGlC,UAAU,sBAAsB6C,EAAKI,OACxC,uBAAGjD,UAAU,sBAAsB6C,EAAKK,OACxC,4BACE/C,KAAK,SACLH,UAAU,iBACVO,QAAS,kBAAMyC,MAHjB,UAdM,mDA1Bd,GAAiCL,cC2ClBQ,E,4MAxCb7B,MAAQ,CACN8B,eAAgB,G,EAGlBC,WAAa,SAAC7C,GACZ,EAAKuB,SAAS,CAAEqB,eAAgB5C,K,EAGlC8C,YAAc,WACZ,EAAKvB,SAAS,CAAEqB,eAAgB,K,4CAGlC,WAAU,IACAA,EAAmBf,KAAKf,MAAxB8B,eACAC,EAA4BhB,KAA5BgB,WAAYC,EAAgBjB,KAAhBiB,YAEpB,OACE,yBAAKtD,UAAU,OACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACED,aAAcsD,EACdD,eAAgBA,KAIpB,yBAAKpD,UAAU,gBACb,yBAAKA,UAAU,0BACZoD,EACC,kBAAC,EAAD,CACE5C,OAAQ4C,EACRJ,QAASM,IAET,0B,GAjCEC,IAAMZ,WCHxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.2c7033fe.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function Todo({ todo, selectedUser }) {\n  return (\n    <li className={classNames(\n      'TodoList__item',\n      { 'TodoList__item--unchecked': todo.completed },\n      { 'TodoList__item--checked': !todo.completed },\n    )}\n    >\n      <label>\n        <input\n          type=\"checkbox\"\n          readOnly\n          checked={!todo.completed}\n        />\n        <p>{todo.title}</p>\n      </label>\n\n      <button\n        className=\"\n          TodoList__user-button\n          TodoList__user-button--selected\n          button\n        \"\n        type=\"button\"\n        onClick={() => selectedUser(todo.userId)}\n      >\n        User&nbsp;#\n        {todo.userId}\n      </button>\n    </li>\n  );\n}\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    completed: PropTypes.bool,\n    createdAt: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    updatedAt: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number,\n  }).isRequired,\n  selectedUser: PropTypes.func.isRequired,\n};\n","const BASE__URL = 'https://mate-api.herokuapp.com/';\n\nconst request = async(url) => {\n  const response = await fetch(`${BASE__URL}${url}`);\n\n  if (!response.ok) {\n    throw new Error(`${response.status}`);\n  }\n\n  return response.json();\n};\n\nexport const getTodos = async() => {\n  const response = await request('todos');\n\n  return response.data;\n};\n\nexport const getUser = async(userId) => {\n  const response = await request(`users/${userId}`);\n\n  return response.data;\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Todo } from '../Todo';\nimport { getTodos } from '../../API/api';\n\nimport './TodoList.scss';\n\nexport class TodoList extends Component {\n  state = {\n    todos: [],\n    selectValue: '',\n  }\n\n  async componentDidMount() {\n    this.setState({ todos: await getTodos() });\n  }\n\n  filterByTitle = async(event) => {\n    const { value } = event.target;\n    let todos = await getTodos();\n\n    todos = todos.filter(todo => ((todo.title !== null)\n      ? todo.title.includes(value)\n      : null));\n\n    this.setState({ todos });\n  }\n\n  onChange = (e) => {\n    const { value, name } = e.target;\n\n    this.setState({ [name]: value });\n\n    return this.selectCategory(value);\n  }\n\n  selectCategory = async(property) => {\n    const todos = await getTodos();\n\n    switch (property) {\n      case 'completed':\n        this.setState({ todos: todos.filter(\n          todo => !todo.completed,\n        ) });\n        break;\n\n      case 'active':\n        this.setState({ todos: todos.filter(\n          todo => todo.completed,\n        ) });\n        break;\n\n      default:\n        this.setState({ todos });\n    }\n  }\n\n  render() {\n    const { selectedUser } = this.props;\n    const { todos, selectValue } = this.state;\n    const { onChange, filterByTitle } = this;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <>\n          <input\n            className=\"input is-rounded\"\n            type=\"text\"\n            placeholder=\"type title here\"\n            onChange={filterByTitle}\n          />\n          <div className=\"select is-rounded\">\n            <select\n              name=\"selectValue\"\n              value={selectValue}\n              onChange={onChange}\n            >\n              <option>all</option>\n              <option>active</option>\n              <option>completed</option>\n            </select>\n          </div>\n        </>\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {todos.map(todo => (\n              <Todo\n                key={todo.id}\n                todo={todo}\n                selectedUser={selectedUser}\n              />\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  selectedUser: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../../API/api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends Component {\n  state = {\n    user: null,\n  };\n\n  componentDidMount() {\n    this.loadAndSetUser();\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.userId !== this.props.userId) {\n      this.loadAndSetUser();\n    }\n  }\n\n  async loadAndSetUser() {\n    const user = await getUser(this.props.userId);\n\n    this.setState({ user });\n  }\n\n  render() {\n    const { userId, onClear } = this.props;\n    const { user } = this.state;\n\n    if (!user) {\n      return (<span> Wait please </span>);\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            {`Selected user:  ${userId}`}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n        <button\n          type=\"button\"\n          className=\"button is-dark\"\n          onClick={() => onClear()}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  onClear: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport 'bulma';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nclass App extends React.Component {\n  state = {\n    selectedUserId: 0,\n  };\n\n  selectUser = (userId) => {\n    this.setState({ selectedUserId: userId });\n  }\n\n  clearUserId = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { selectedUserId } = this.state;\n    const { selectUser, clearUserId } = this;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            selectedUser={selectUser}\n            selectedUserId={selectedUserId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                onClear={clearUserId}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}